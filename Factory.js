Factory={
	claw:
	{
		readValue:false,
		position:0,
		heldBox:null,
		move:
		{
			left:function()
			{
				if(Factory.claw.position>0)
					Factory.claw.position--;
			},
			right:function()
			{
				if(Factory.claw.position<8)
					Factory.claw.position++;
			}
		},
		read:function()
		{
			if(Factory.claw.heldBox==null)
			{
				Factory.claw.readValue=!Factory.claw.readValue;
			}
			else
			{
				Factory.claw.readValue=Factory.claw.heldBox;
			}
		},
		drop:function()
		{
			if(Factory.claw.heldBox==null)
			{
				(Factory.stacks[Factory.claw.position]).pickUp();
			}
			else
			{
				(Factory.stacks[Factory.claw.position]).dropOff();
			}
		}
	},
	stacks:
	[
		//production
		{
			resource:true,
			pickUp:function()
			{
				Factory.claw.heldBox=this.resource;
			},
			dropOff:function()
			{
				this.resource=Factory.claw.heldBox;
				Factory.claw.heldBox=null;
			}
		},
		//storage 1
		{
			stack:[],
			pickUp:function()
			{
				if(this.stack.length>0)
				{
					Factory.claw.heldBox=this.stack[this.stack.length-1];
					this.stack.length--;
				}

			},
			dropOff:function()
			{
				this.stack[this.stack.length]=Factory.claw.heldBox;
				Factory.claw.heldBox=null;
			}
		},
		//storage 2
		{
			stack:[],
			pickUp:function()
			{
				if(this.stack.length>0)
				{
					Factory.claw.heldBox=this.stack[this.stack.length-1];
					this.stack.length--;
				}

			},
			dropOff:function()
			{
				this.stack[this.stack.length]=Factory.claw.heldBox;
				Factory.claw.heldBox=null;
			}
		},
		//storage 3
		{
			stack:[],
			pickUp:function()
			{
				if(this.stack.length>0)
				{
					Factory.claw.heldBox=this.stack[this.stack.length-1];
					this.stack.length--;
				}

			},
			dropOff:function()
			{
				this.stack[this.stack.length]=Factory.claw.heldBox;
				Factory.claw.heldBox=null;
			}
		},
		//trash
		{
			pickUp:function(){},
			dropOff:function()
			{
				Factory.claw.heldBox=null;
			}
		},
		//output
		{
			stack:[],
			pickUp:function()
			{
				if(this.stack.length>0)
				{
					Factory.claw.heldBox=this.stack[this.stack.length-1];
					this.stack.length--;
				}

			},
			dropOff:function()
			{
				this.stack[this.stack.length]=Factory.claw.heldBox;
				Factory.claw.heldBox=null;
			},
			output:function()
			{
				var bins=[];
				var message="";
				for(i=0;i<this.stack.length;i+=8)
				{
					bins[i/8]="";
					for(j=0; j<8; j++)
					{
						if(i+j<this.stack.length)
						{
							if(this.stack[i+j]==true)
								bins[i/8]+="1";
							if(this.stack[i+j]==false)
								bins[i/8]+="0";
						}
					}
				}
				for(i=0; i<bins.length; i++)
				{
					bins[i]=parseInt(bins[i],2);
					bins[i]=String.fromCharCode(bins[i]);
					message+=bins[i];
				}
				alert(message);
				this.stack=[];
			}
		},
		//input
		{
			stack:[],
			pickUp:function()
			{
				if(this.stack.length>0)
				{
					Factory.claw.heldBox=this.stack[this.stack.length-1];
					this.stack.length--;
				}

			},
			dropOff:function()
			{
				this.stack[this.stack.length]=Factory.claw.heldBox;
				Factory.claw.heldBox=null;
			},
			input:function()
			{
				this.stack=[];
				var msg=prompt();
				var bin=[];
				for(i=0; i<msg.length; i++)
				{
					bin[i]=msg[i];
					bin[i]=bin[i].charCodeAt();
					bin[i]=bin[i].toString(2);
					while(bin[i].length<8)
					{
						bin[i]="0"+bin[i];
					}
					bin[i]=(bin[i]).split("").reverse().join("");
				}
				var bins=bin.reverse().join("");
				for(i=0;i<bins.length;i++)
				{
					if(bins[i]=="1")
					{
						this.stack[this.stack.length]=true;
					}
					else
					{
						this.stack[this.stack.length]=false;
					}
				}
			}
		},
		//invert
		{
			onDeck:null,
			pickUp:function()
			{
				Factory.claw.heldBox=this.onDeck;
				this.onDeck=null;
			},
			dropOff:function()
			{
				this.onDeck=!Factory.claw.heldBox;
				Factory.claw.heldBox=null;
			}
		},
		//and
		{
			stack:[],
			pickUp:function()
			{
				if(this.stack.length>0)
				{
					Factory.claw.heldBox=this.stack[this.stack.length-1];
					this.stack.length--;
				}
			},
			dropOff:function()
			{
				this.stack[this.stack.length]=Factory.claw.heldBox;
				Factory.claw.heldBox=null;
				if(this.stack.length==2)
				{
					if(this.stack[0]&&this.stack[1])
					{
						this.stack=[true];
					}
					else
					{
						this.stack=[false];
					}
				}
			}		
		}
	]
}
